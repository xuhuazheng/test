<?xml version="1.0" encoding="UTF-8" ?>

<project name="UIComponentRepo" default="run" basedir=".">
    <property name="Src" value="src"/>
    <property name="ClassDir" value="classes"/>
    <property name="BuildJar" value="UIComRepo-20190121.jar"/>

    <property name="lib" value="${basedir}\lib"/>  

    <path id="project.classpath">
        <fileset dir="${lib}" includes="***.jar" />
    </path>

    <!-- 
    第1步：初始化
        把你想做的每一件事情写成一个target ，它有一个名字，depends是它所依赖的target，再执行这个target 
        例如这里的compile之前ant会先检查init是否曾经被执行过，如果执行过则直接直接执行compile，
		如果没有则会先执行它依赖的target例如这里的init，
        然后在执行这个target如我们的计划  
    -->
    <target name="init">
        <!-- 为了不用拷贝，我们可以在最开始定义好目标文件夹，这样ant直接把结果就放在目标文件夹中了 
		新建文件夹:   
		-->
       <mkdir dir="${basedir}/bulid"/>
       <mkdir dir="${basedir}/${ClassDir}"/>
    </target>


    <!-- 
    第2步：编译
    -->
    <target name="compile" depends="init">
        <!-- 
        includeantruntime="false"、
        解决：
        [javac] E:\04-scala_eclipse\01-work\Hello\build.xml:46: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
		
		(classpathref="project.classpath" 加载lib下的jar包)
        -->
       <javac srcdir="${Src}" destdir="${ClassDir}" includeantruntime="false"  nowarn="on" source="1.8" target="1.8" deprecation="true" debug="true"  classpathref="project.classpath" >
            <compilerarg line="-Xlint:unchecked" />
       </javac>
    </target>


    <!-- 
    第3步：做jar包
    -->
    <target name="build" depends="compile">
        <!--
            Could not find com.phei.netty.protocol.http.xml.Test. Make sure you have it in your classpath
            主要是解决：
                /Hello/classes 目录的，编译后的.class文件存放位置
       <jar jarfile="${BuildJar}" basedir="${ClassDir}" />         
         -->
       <jar jarfile="${basedir}/bulid/${BuildJar}" basedir="${ClassDir}" />

       <!-- 创建生成的jar包存放位置 /Hello/bulid/helloant.jar 
       <jar destfile="${basedir}/bulid/${BuildJar}" /> -->

    </target>


    <!-- 
    第4步：运行
	classpathref="project.classpath" 加载lib下的jar包
    -->
    <target name="run" depends="clean,build">
       
    	<!--
		<java classname="com.ant.xml.TestAnt" classpath="${BuildJar}" classpathref="project.classpath"/>
    	-->
    	<!-- <java classname="name.lxm.ins.ui.designer.component" classpath="${basedir}/bulid/${BuildJar}" classpathref="project.classpath"/>   -->
    </target>


    <!-- 重新运行  -->
    <target name="rerun" depends="run">
       <ant target="clean" />
       <ant target="run" />
    </target>


    <!-- 
        每次运行前清空，以前运行的东西，比如生成的jar包，编译的.class文件
    -->
    <target name="clean">
       <delete dir="${ClassDir}" />
       <delete file="${BuildJar}" />
    </target>

</project>
